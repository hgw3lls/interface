var spawn = require('child_process').spawn
  , fs = require('fs');

module.exports = function(upload_dir, media_dir) { 

    // create media directory if empty
    try {
        fs.mkdirSync(media_dir);
    }catch(e){}

    return {

        onupload: function(identifier, filename) {

            // XXX: It should be possible to start encoding as the upload
            // is coming in by spawning an avconv process directly as
            // chunks come in. However, it's probably simpler for now to
            // just deal with the file once it finishes.

            console.log('trying to run', __dirname + '/../../script/encode.py');

            var converter = spawn(__dirname + '/../../script/encode.py', 
                                  [upload_dir, identifier, filename], 
                                  {cwd:media_dir, env:process.env});

            converter.stdout.on('data', function (data) {
                console.log('converter stdout: ' + data);
            });

            converter.stderr.on('data', function (data) {
                console.log('converter stderr: ' + data);
            });

            converter.on('exit', function (code) {
                if (code !== 0) {
                    console.log('encode.py failed with error code ' + code);
                }
                else {
                    console.log('encode.py finished ' + filename);            
                }
            });
        }
    }
};
